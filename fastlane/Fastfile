# If you want to update latest version automatically
update_fastlane
# Minimum version required
fastlane_version "1.98.0"

#Test Lanes
desc "Runs all tests for the given environment"
desc "Set `scan` action environment variables to control test configuration"
desc "####Example:"
desc "```\nfastlane test_framework configuration:Debug --env ios84\n```"
desc "####Options"
desc " * **`configuration`**: The build configuration to use."
desc ""
lane :test_framework do |options|

  scan(
    configuration: options[:configuration]
  )

end

desc "Runs tests and builds example for the given environment"
desc "The lane is run by ci for every commit. It calls the lanes `test_framework` and `build_example`."
desc "####Example:"
desc "```\nfastlane ci_commit configuration:Debug --env ios84\n```"
desc "####Options"
desc " * **`configuration`**: The build configuration to use. (`AF_CONFIGURATION`)"
desc ""
lane :ci_commit do |options|
  if options[:configuration]
    configuration = options[:configuration]
  elsif ENV["DU_CONFIGURATION"]
    configuration = ENV["DU_CONFIGURATION"]
  else
    configuration = "Release"
  end

  test_framework(configuration: configuration)

  build_example(configuration: configuration)

  af_pod_spec_lint(
    quick:true
  )
end

desc "Builds the example file"
desc "Set `xcodebuild` action environment variables to control build configuration"
desc "####Example:"
desc "```\nfastlane build_example configuration:Debug --env ios84\n```"
desc "####Options"
desc " * **`configuration`**: The build configuration to use."
desc ""
lane :build_example do |options|

  xcodebuild(
    workspace: ENV["EXAMPLE_WORKSPACE"],
    scheme: ENV["EXAMPLE_SCHEME"],
    build: true,
    destination: ENV["EXAMPLE_DESTINATION"],
    configuration: options[:configuration],
    build_settings: [["ONLY_ACTIVE_ARCH", "NO"]]
  )
end
